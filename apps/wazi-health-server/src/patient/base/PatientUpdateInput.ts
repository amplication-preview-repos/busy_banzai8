/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentUpdateManyWithoutPatientsInput } from "./AppointmentUpdateManyWithoutPatientsInput";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { DocumentUpdateManyWithoutPatientsInput } from "./DocumentUpdateManyWithoutPatientsInput";
import { HospitalWhereUniqueInput } from "../../hospital/base/HospitalWhereUniqueInput";
import { ScanUpdateManyWithoutPatientsInput } from "./ScanUpdateManyWithoutPatientsInput";

@InputType()
class PatientUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => AppointmentUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  appointments?: AppointmentUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutPatientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => HospitalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HospitalWhereUniqueInput)
  @IsOptional()
  @Field(() => HospitalWhereUniqueInput, {
    nullable: true,
  })
  hospital?: HospitalWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ScanUpdateManyWithoutPatientsInput,
  })
  @ValidateNested()
  @Type(() => ScanUpdateManyWithoutPatientsInput)
  @IsOptional()
  @Field(() => ScanUpdateManyWithoutPatientsInput, {
    nullable: true,
  })
  scans?: ScanUpdateManyWithoutPatientsInput;
}

export { PatientUpdateInput as PatientUpdateInput };
